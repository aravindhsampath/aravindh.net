<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ZFS on Aravindh.net</title>
    <link>https://aravindh.net/tags/zfs/</link>
    <description>Recent content in ZFS on Aravindh.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 29 Jul 2018 17:55:47 +0200</lastBuildDate>
    
	<atom:link href="https://aravindh.net/tags/zfs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ZFS performance</title>
      <link>https://aravindh.net/post/zfs_performance/</link>
      <pubDate>Sun, 29 Jul 2018 17:55:47 +0200</pubDate>
      
      <guid>https://aravindh.net/post/zfs_performance/</guid>
      <description>Context This is NOT an all-in post about ZFS performance. I built a FreeBSD+ZFS file server recently at work to serve as an offsite backup server. I wanted to run a few synthetic workloads on it and look at how it fares from performance perspective. Mostly for curiosity and learning purposes.
Performance As stated in the notes about building this server, performance was not one of the priorities, as this server will never face our active workload.</description>
    </item>
    
    <item>
      <title>ZFS file server</title>
      <link>https://aravindh.net/post/zfs_fileserver/</link>
      <pubDate>Mon, 16 Jul 2018 17:55:47 +0200</pubDate>
      
      <guid>https://aravindh.net/post/zfs_fileserver/</guid>
      <description>p {text-indent: 8%;}  What is the need? At work, we run a compute cluster that uses an Isilon cluster as primary NAS storage. Excluding snapshots, we have about 200TB of research data, some of them in compressed formats, and others not. We needed an offsite backup file server that would constantly mirror our primary NAS and serve as a quick recovery source in case of a data loss in the the primary NAS.</description>
    </item>
    
  </channel>
</rss>